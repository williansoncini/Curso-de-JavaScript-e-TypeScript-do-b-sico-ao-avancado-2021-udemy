{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAYA,MAAqB,WAAW;IAK9B,YAAY,mBAAwC;QAClD,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,WAAW,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;IACnD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC7C,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,OAAO,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;SACpC;IACH,CAAC;IACD,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;IACrC,CAAC;CACF;AAnCD,iCAmCC;AAED,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC;IAClC,WAAW,EAAE,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAqB;IACjE,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAsB;IAChE,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAsB;CACjE,CAAC,CAAC;AAEH,WAAW,CAAC,cAAc,EAAE,CAAC;AAE7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC","sources":["webpack://typescript/./src/index.ts"],"sourcesContent":["interface VideoPlayerElements {\r\n  videoPlayer: HTMLVideoElement;\r\n  playButton: HTMLButtonElement;\r\n  stopButton: HTMLButtonElement;\r\n}\r\n\r\ninterface VideoPlayerProtocol {\r\n  playToggle(): void;\r\n  stop(): void;\r\n  iniciarEventos(): void;\r\n}\r\n\r\nexport default class VideoPlayer implements VideoPlayerProtocol {\r\n  private videoPlayer: HTMLVideoElement;\r\n  private playButton: HTMLButtonElement;\r\n  private stopButton: HTMLButtonElement;\r\n\r\n  constructor(videoPlayerElements: VideoPlayerElements) {\r\n    this.videoPlayer = videoPlayerElements.videoPlayer;\r\n    this.playButton = videoPlayerElements.playButton;\r\n    this.stopButton = videoPlayerElements.stopButton;\r\n  }\r\n\r\n  iniciarEventos(): void {\r\n    this.playButton.addEventListener('click', () => {\r\n      this.playToggle();\r\n    });\r\n\r\n    this.stopButton.addEventListener('click', () => {\r\n      this.stop();\r\n    });\r\n  }\r\n  playToggle(): void {\r\n    console.log('Cliquei no play');\r\n    if (this.videoPlayer.paused) {\r\n      this.videoPlayer.play();\r\n      this.playButton.innerText = 'Pause';\r\n    } else {\r\n      this.videoPlayer.pause();\r\n      this.playButton.innerText = 'Play';\r\n    }\r\n  }\r\n  stop(): void {\r\n    this.videoPlayer.pause();\r\n    this.videoPlayer.currentTime = 0;\r\n    this.playButton.innerText = 'play';\r\n  }\r\n}\r\n\r\nconst videoPlayer = new VideoPlayer({\r\n  videoPlayer: document.querySelector('.video') as HTMLVideoElement,\r\n  playButton: document.querySelector('.play') as HTMLButtonElement,\r\n  stopButton: document.querySelector('.stop') as HTMLButtonElement,\r\n});\r\n\r\nvideoPlayer.iniciarEventos();\r\n\r\nconsole.log('teste');\r\n"],"names":[],"sourceRoot":""}